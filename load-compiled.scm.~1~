;;; ----------------------------------------------------------------------
;;; Copyright 2008 Alexey Radul and Gerald Jay Sussman.
;;; ----------------------------------------------------------------------
;;; This file is part of Artistic Propagator Prototype.
;;; 
;;; Artistic Propagator Prototype is free software; you can
;;; redistribute it and/or modify it under the terms of the GNU
;;; General Public License as published by the Free Software
;;; Foundation, either version 3 of the License, or (at your option)
;;; any later version.
;;; 
;;; Artistic Propagator Prototype is distributed in the hope that it
;;; will be useful, but WITHOUT ANY WARRANTY; without even the implied
;;; warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
;;; See the GNU General Public License for more details.
;;; 
;;; You should have received a copy of the GNU General Public License
;;; along with Artistic Propagator Prototype.  If not, see
;;; <http://www.gnu.org/licenses/>.
;;; ----------------------------------------------------------------------

;;; To load the full system, either load this file with
;;; (load "path/to/load-published.scm") or change your Scheme's
;;; working directory to be the directory where this file is and
;;; evaluate these forms sequentially at the repl.

(define (cf-conditionally filename)
  (fluid-let ((sf/default-syntax-table (nearest-repl/environment)))
    (sf-conditionally filename))
  (if (not (file-processed? filename "bin" "com"))
      (compile-bin-file filename)))

(define (load-compiled filename)
  (cf-conditionally filename)
  (load filename))

(define (self-relatively thunk)
  (if (current-eval-unit #f)
      (with-working-directory-pathname
       (directory-namestring (current-load-pathname))
       thunk)
      (thunk)))

(define (load-relative-compiled filename)
  (self-relatively (lambda () (load-compiled filename))))

(load-relative "sugar")

(for-each
 load-relative-compiled
 '("utils"
   "eq-properties"
   "sugar"
   "ghelper"
   "genops"
   "cells"  ;defines merge generic operator

   "intervals"
   "propagators"
   "primitive-propagators"
   "constraint-propagators"
   "supported-values"
   "tms"
   "scheduler"
   "search"

   ;; Test cases
   "puzzle-utilities"
   "examples"))
